df_police %>% mutate(across(c(Scene_Station,Urban_Non_Urban_by_ESZ,Call_Source,Priority,Closure_Type_Code,Closure_Priority), as.factor))
df_cas %>% mutate(across(c(Crash.severity,Simple...complex.crash,Police.attended,Watch.house,Holiday,Is.weekend,Police.station,Road.category,Intersection...midblock,Intersection,On.state.highway,Urban.or.open.speed.zone,Movement.codes.categories,Road.Safety.report.movement.group,Junction.type,Rail.crossing.controls,Road.curvature,Gradient,Surface.type,Road.type,Special.purpose.lane, Street.lights, Traffic.control.present,Primary.surface.condition, Road.markings, Natural.Light, Primary.weather, Secondary.weather),as.factor))
summary(df_cas)
df_police <- df_police %>% mutate(across(c(Scene_Station,Urban_Non_Urban_by_ESZ,Call_Source,Priority,Closure_Type_Code,Closure_Priority), as.factor))
df_cas <- df_cas %>% mutate(across(c(Crash.severity,Simple...complex.crash,Police.attended,Watch.house,Holiday,Is.weekend,Police.station,Road.category,Intersection...midblock,Intersection,On.state.highway,Urban.or.open.speed.zone,Movement.codes.categories,Road.Safety.report.movement.group,Junction.type,Rail.crossing.controls,Road.curvature,Gradient,Surface.type,Road.type,Special.purpose.lane, Street.lights, Traffic.control.present,Primary.surface.condition, Road.markings, Natural.Light, Primary.weather, Secondary.weather),as.factor))
summary(df_cas)
write.csv(df_cas,"C:\\Users\\sagea\\Documents\\MINZ\\final_CAS.csv",row.names = F)
write.csv(df_police,"C:\\Users\\sagea\\Documents\\MINZ\\final_FullRoadSearch.csv",row.names = F)
dsi_cas <- df_cas %>% filter(Crash.severity = "Fatal Crash|Serious Crash")
dsi_cas <- df_cas %>% filter(Crash.severity == "Fatal Crash|Serious Crash")
dsi_cas <- df_cas %>% filter(Crash.severity == "Serious Crash" | Crash.severity == "Fatal Crash")
write.csv(df_cas,"C:\\Users\\sagea\\Documents\\MINZ\\DSI_only_CAS
.csv",row.names = F)
write.csv(dsi_cas,"C:\\Users\\sagea\\Documents\\MINZ\\DSI_only_CAS
.csv",row.names = F)
write.csv(dsi_cas,"C:\\Users\\sagea\\Documents\\MINZ\\DSI_only_CAS
.csv", row.names = F)
write.csv(dsi_cas,"C:\\Users\\sagea\\Documents\\MINZ\\DSI_only_CAS.csv", row.names = F)
summary(df_police)
police_presence <- df_police %>% filter(Closure_Type_Code = "1U|3R|3T|3W|6I")
police_presence <- df_police %>% filter(Closure_Type_Code == "1U|3R|3T|3W|6I")
police_presence <- df_police %>% filter(Closure_Type_Code == "1U" | Closure_Type_Code == "3R" | Closure_Type_Code == "3T" |Closure_Type_Code == "3W" | Closure_Type_Code == "6I")
summary(police_presence)
write.csv(police_presence,"C:\\Users\\sagea\\Documents\\MINZ\\1U_3T_3R_3W_6I_presence_FullRoadSearch.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(osmdata)
library(rnaturalearthdata)
library(dplyr)
library(lubridate)
df_crash <- read.csv("final_CAS.csv")
df_police <- read.csv("final_FullRoadSearch")
df_police <- read.csv("final_FullRoadSearch.csv")
# Path to your shapefile
shapefile_path <- "new-zealand-latest-free.shp"
layers_info <- st_layers(shapefile_path)
print(layers_info)
# Path to your shapefile
shapefile_path <- "C:\\Users\\sagea\\Documents\\MINZ\\new-zealand-latest-free.shp"
layers_info <- st_layers(shapefile_path)
print(layers_info)
# Read the shapefile
nz_map <- st_read(shapefile_path, layer="gis_osm_roads_free_1")
chch_bbox <- st_bbox(c(xmin = 172.42, ymin = -43.71, xmax = 172.80, ymax = -43.41), crs = st_crs(nz_map))
# Filter the roads data to only include features within the bounding box
roads_chch <- st_crop(nz_map, chch_bbox) %>%
filter(fclass %in% c("trunk", "primary", "secondary", "tertiary")) # primary, secondary, tertiary, motorway
# Filter the roads data to only include features within the bounding box
roads_chch <- st_crop(nz_map, chch_bbox) %>%
filter(fclass %in% c("trunk", "primary", "secondary", "tertiary")) # primary, secondary, tertiary, motorway
# Print the first few rows of the filtered data
print(head(roads_chch))
df_police <- read.csv("latlong_FullRoadSearch.csv")
df_police <- read.csv("latlong_updated_FullRoadSearch.csv")
```{r fig.height=10, fig.width=10}
ggplot() +
geom_bin2d(data=df_crash, aes(x=Longitude, y=Latitude), bins=100, ) +
geom_sf(data = roads_chch, color = "blue", size = 0.5) +
scale_fill_gradient(low="lightblue1",high="darkblue")+
theme_minimal() +
labs(title = "Accidents",
x = "Longitude", y = "Latitude") +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
axis.title = element_text(size = 15)
)
library(proj4)
library(maps)
library(mapproj)
proj4string <- "+proj=tmerc +lat_0=0.0 +lon_0=173.0 +k=0.9996 +x_0=1600000.0 +y_0=10000000.0 +datum=WGS84 +units=m"
nr = 1000000
p <- project(rbind(df_police[, "Easting"], df_police[, "Northing"]), proj=proj4string, inverse=T)
df_police$Longitude = p[,1]
df_police$Latitude = p[,2]
# for (nr in (1:nrow(df_police))){
#   east <- df_police[nr, "NZTM_Easting"]
#   north <- df_police[nr, "NZTM_Northing"]
#   p <- project(c(east, north), proj=proj4string, inverse=T)
#   df_police[nr, "longitude"] = p[1]
#   df_police[nr, "latitude"] = p[2]
#
# }
df_police <- read.csv("final_FullRoadSearch.csv")
library(proj4)
library(maps)
library(mapproj)
proj4string <- "+proj=tmerc +lat_0=0.0 +lon_0=173.0 +k=0.9996 +x_0=1600000.0 +y_0=10000000.0 +datum=WGS84 +units=m"
nr = 1000000
p <- project(rbind(df_police[, "Easting"], df_police[, "Northing"]), proj=proj4string, inverse=T)
df_police$Longitude = p[,1]
p <- project(rbind(df_police[, "Easting"], df_police[, "Northing"]), proj=proj4string, inverse=T)
df_police$Longitude = p[,1]
df_police <- read.csv("final_FullRoadSearch.csv")
df_police <- read.csv("final_FullRoadSearch.csv")
library(proj4)
library(proj4)
library(maps)
library(mapproj)
proj4string <- "+proj=tmerc +lat_0=0.0 +lon_0=173.0 +k=0.9996 +x_0=1600000.0 +y_0=10000000.0 +datum=WGS84 +units=m"
nr = 1000000
p <- project(rbind(df_police[, "Easting"], df_police[, "Northing"]), proj=proj4string, inverse=T)
df_police$Longitude = p[,1]
df_police$Latitude = p[,2]
df_police <- read.csv("final_FullRoadSearch.csv")
library(proj4)
library(maps)
library(mapproj)
proj4string <- "+proj=tmerc +lat_0=0.0 +lon_0=173.0 +k=0.9996 +x_0=1600000.0 +y_0=10000000.0 +datum=WGS84 +units=m"
nr = 1000000
p <- project(rbind(df_police[, "Easting"], df_police[, "Northing"]), proj=proj4string, inverse=T)
df_police$Longitude = p[,1]
df_police$Latitude = p[,2]
write.csv(df_police,"final_FullRoadSearch.csv")
police_presence <- df_police %>% filter(Closure_Type_Code == "1U" | Closure_Type_Code == "3R" | Closure_Type_Code == "3T" |Closure_Type_Code == "3W" | Closure_Type_Code == "6I")
summary(police_presence)
summary(df_police)
write.csv(police_presence,"C:\\Users\\sagea\\Documents\\MINZ\\1U_3T_3R_3W_6I_presence_FullRoadSearch.csv", row.names = F)
df_police <- read.csv("up_updated_FullRoadSearch.csv")
df_police <- read.csv("up_updated_FullRoadSearch_2.0.csv")
summary(df_police)
df_police <- read.csv("up_updated_FullRoadSearch_2.0.csv")
library(proj4)
library(maps)
library(mapproj)
proj4string <- "+proj=tmerc +lat_0=0.0 +lon_0=173.0 +k=0.9996 +x_0=1600000.0 +y_0=10000000.0 +datum=WGS84 +units=m"
nr = 1000000
p <- project(rbind(df_police[, "Easting"], df_police[, "Northing"]), proj=proj4string, inverse=T)
df_police$Longitude = p[,1]
df_police$Latitude = p[,2]
write.csv(df_police,"up_updated_FullRoadSearch-2.0-with-latlong.csv")
write.csv(df_police,"up_updated_FullRoadSearch-2.0-with-latlong.csv", row.names = F)
write.csv(df_police,"up_updated_FullRoadSearch-2.0-with-latlong.csv", row.names = F)
write.csv(df_police,"up_updated_FullRoadSearch-2_0-with-latlong.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(osmdata)
library(rnaturalearthdata)
library(dplyr)
library(lubridate)
df_crash <- read.csv("final_CAS.csv")
df_police <- read.csv("latlong_updated_FullRoadSearch.csv")
# Path to your shapefile
shapefile_path <- "C:\\Users\\sagea\\Documents\\MINZ\\new-zealand-latest-free.shp"
layers_info <- st_layers(shapefile_path)
print(layers_info)
# Read the shapefile
nz_map <- st_read(shapefile_path, layer="gis_osm_roads_free_1")
#nz_map_landuse <- st_read(shapefile_path, layer="gis_osm_natural_a_free_1")
chch_bbox <- st_bbox(c(xmin = 172.42, ymin = -43.71, xmax = 172.80, ymax = -43.41), crs = st_crs(nz_map))
# Filter the roads data to only include features within the bounding box
roads_chch <- st_crop(nz_map, chch_bbox) %>%
filter(fclass %in% c("trunk", "primary", "secondary", "tertiary")) # primary, secondary, tertiary, motorway
landuse_chch <- st_crop(nz_map_landuse, chch_bbox)
intox <- df_crash %>% filter(intoxication == 1)
intox <- df_crash %>% filter(intoxicaton,1)
intox <- df_crash %>% filter(intoxicaton,"1")
intox <- df_crash %>% filter(intoxicaton,TRUE)
intox <- df_crash %>% filter(intoxicaton == 1)
intox_crashmap <- gglot(data=roads_chch,aes(long,lat))
intox_crashmap <- ggplot(data=roads_chch,aes(long,lat))
intox_crashmap
df_crash <- read.csv("final_CAS.csv")
df_police <- read.csv("up_updated_FullRoadSearch-2_0-with-latlong.csv")
intox <- df_crash %>% filter(intoxicaton == 1)
intox <- df_crash %>% filter(Crash.severity == "Fatal Crash" |Crash.severity == "Serious Crash")
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=lng, y=lat), color = "red")
intox_crashmap
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude)), color = "red")
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap
intox_crashmap
intox <- df_crash %>% filter(Crash.severity == "Fatal Crash" | Crash.severity == "Serious Crash" & intoxication == 1)
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox <- df_crash %>% filter(Crash.severity == "Fatal Crash" | Crash.severity == "Serious Crash" & intoxication == 1)
intox <- df_crash %>% filter(intoxicaton == 1)
intox <- intox %>% filter(Crash.severity == "Fatal Crash" | Crash.severity == "Serious Crash")
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap
intox_crashmap
3R <- df_police %>% filter(Closure.Type.Code == "3R")
checkpoints<- df_police %>% filter(Closure.Type.Code == "3R")
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
#geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
geom_point(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green")
intox
intox_crashmap
summary(checkpoints)
size(checkpoints)
length(checkpoints$Closure.Type.Code)
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
#geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
#geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green")
intox_crashmap <- ggplot() +
geom_sf(data = roads_chch) +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green")
intox_crashmap
intox_crashmap <- ggplot() +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
geom_sf(data = roads_chch) +
#geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green")
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap
intox_crashmap <- ggplot() +
#geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
geom_sf(data = roads_chch) +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green")
intox_crashmap
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap <- ggplot() +
#geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
geom_sf(data = roads_chch) +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green")
intox_crashmap <- ggplot() +
#geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
geom_sf(data = roads_chch) +
geom_bin2d(data=checkpoints, aes(x=Longitude, y=Latitude), color = "green") +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red")
intox_crashmap
intox <- df_crash %>% filter(intoxication == 1)
intox <- df_crash %>% filter(intoxicaton == 1)
map_intox <- ggplot() +
geom_bin2d(data=intox, aes(x=Longitude, y=Latitude), color = "green") +
geom_sf(data = roads_chch)
map_intox
map_intox <- ggplot() +
geom_bin2d(data=intox, aes(x=Longitude, y=Latitude), color = "green") +
geom_sf(data = roads_chch) +
scale_fill_gradient(low="green4",high="green")
map_intox
map_intox <- ggplot() +
geom_bin2d(data=intox, aes(x=Longitude, y=Latitude), color = "blue") +
geom_sf(data = roads_chch) +
scale_fill_gradient(low="lightblue1",high="darkblue")
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "blue", alpha = 1/5)
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "blue", alpha = 1/20)
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "blue", alpha = 1/10)
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "blue", alpha = 1/10, size = 0.5)
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "blue", alpha = 1/10, size = 1)
map_intox
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "red", alpha = 1/10, size = 1)
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green", alpha = 1/10, size = 1) +
ggtitle("Intoxication crashes")
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green2", alpha = 1/10, size = 1) +
ggtitle("Intoxication crashes")
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green3", alpha = 1/10, size = 1) +
ggtitle("Intoxication crashes")
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green3", alpha = 1/8, size = 1) +
ggtitle("Intoxication crashes")
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch, alpha = 1/5) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green3", alpha = 1/8, size = 1) +
ggtitle("Intoxication crashes")
map_intox <- ggplot() +
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch, alpha = 1/2) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green3", alpha = 1/8, size = 1) +
ggtitle("Intoxication crashes")
map_intox
map_intox <- ggplot() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green3", alpha = 1/8, size = 1) +
ggtitle("Intoxication crashes")
map_intox
map_intox <- ggplot() +
theme_classic()
map_intox <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green3", alpha = 1/8, size = 1) +
ggtitle("Intoxication crashes")
map_intox
map_speed <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "steelblue", alpha = 1/8, size = 1) +
ggtitle("Speed crashes")
map_speed
map_speed <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "blue3", alpha = 1/8, size = 1) +
ggtitle("Speed crashes")
map_speed
speed <- df_crash %>% filter(speed == 1)
map_speed <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=speed, aes(x=Longitude, y=Latitude), color = "blue3", alpha = 1/8, size = 1) +
ggtitle("Speed crashes")
map_speed
map_intox <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=intox, aes(x=Longitude, y=Latitude), color = "green3", alpha = 1/8, size = 1) +
ggtitle("Intoxication crashes")
intox <- df_crash %>% filter(aggression == 1)
aggression <- df_crash %>% filter(aggression == 1)
intox <- df_crash %>% filter(intoxicaton == 1)
speed <- df_crash %>% filter(speed == 1)
aggression <- df_crash %>% filter(aggression == 1)
map_aggression <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=aggression, aes(x=Longitude, y=Latitude), color = "red3", alpha = 1/8, size = 1) +
ggtitle("Aggression crashes")
map_aggression
map_intox
map_speed <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=speed, aes(x=Longitude, y=Latitude), color = "blue3", alpha = 1/8, size = 1) +
ggtitle("Speed crashes")
map_speed
map_aggression <- ggplot() +
theme_classic() +
geom_sf(data = roads_chch, alpha = 1/4) +
geom_point(data=aggression, aes(x=Longitude, y=Latitude), color = "red3", alpha = 1/8, size = 1) +
ggtitle("Aggression crashes")
map_aggression
setwd("~/GitHub/ABM_polarisation/ABM data")
library(ggplot2)
size_similarity_group2 <- ggplot(group_size_test, aes(x=Size, y=Group2_similarity
,fill=Tolerance
)) +
geom_boxplot()
tolerance_test <- read.csv("tolerance-test-100-runs.csv",header = T)
group_size_test <- read.csv("group_size_1000_steps")
group_size_test <- read.csv("group_size_1000_steps.csv",header=T)
library(ggplot2)
#tolerance testing
tolerance_stabilisation <- ggplot(tolerance_test, aes(x=Tolerance, y=Coherence)) +
geom_boxplot()
print(tolerance_stabilisation)
group_size_test$Tolerance <- as.factor(group_size_test$Tolerance)
group_size_test$Size <- as.factor(group_size_test$Size)
tolerance_test <- read.csv("tolerance-test-100-runs.csv",header = T)
tolerance_test$Tolerance <- as.factor(tolerance_test$Tolerance)
group_size_test <- read.csv("group_size_1000_steps.csv",header=T)
group_size_test$Size <- as.factor(group_size_test$Size)
library(ggplot2)
#tolerance testing
tolerance_stabilisation <- ggplot(tolerance_test, aes(x=Tolerance, y=Coherence)) +
geom_boxplot()
tolerance_similarity <- ggplot(tolerance_test, aes(x=Tolerance, y=Similaity_ratio
)) +
geom_boxplot()
tolerance_dimension <- ggplot(tolerance_test, aes(x=Tolerance, y=Dimension
)) +
geom_boxplot()
#group size testing
size_stabilisation <- ggplot(group_size_test, aes(x=Size, y=Coherence,fill=Tolerance
)) +
geom_boxplot()
size_similarity_all <- ggplot(group_size_test, aes(x=Size, y=Similaity_ratio,fill=Tolerance
)) +
geom_boxplot()
size_dimension <- ggplot(group_size_test, aes(x=Size, y=Similaity_ratio,fill=Tolerance
)) +
geom_boxplot()
size_dimension <- ggplot(group_size_test, aes(x=Size, y=Dimension,fill=Tolerance
)) +
geom_boxplot()
size_similarity_group1 <- ggplot(group_size_test, aes(x=Size, y=Group1_similarity
,fill=Tolerance
)) +
geom_boxplot()
size_similarity_group2 <- ggplot(group_size_test, aes(x=Size, y=Group2_similarity
,fill=Tolerance
)) +
geom_boxplot()
print(tolerance_stabilisation)
print(tolerance_similarity)
print(tolerance_dimension)
print(size_dimension)
source("~/GitHub/ABM_polarisation/ABM data/ABM_graphing.R")
source("~/GitHub/ABM_polarisation/ABM data/ABM_graphing.R")
print(size_dimension)
group_size_test$Tolerance <- as.factor(group_size_test$Tolerance)
print(size_dimension)
source("~/GitHub/ABM_polarisation/ABM data/ABM_graphing.R")
print(size_dimension)
source("~/GitHub/ABM_polarisation/ABM data/ABM_graphing.R")
print(size_stabilisation)
#group size testing
size_stabilisation <- ggplot(group_size_test, aes(x=Size, y=Coherence,group=Tolerance
)) +
geom_boxplot()
print(size_stabilisation)
print(size_similarity_all)
size_similarity_all <- ggplot(group_size_test, aes(x=Size, y=Similaity,group=Tolerance
)) +
geom_boxplot()
print(size_similarity_all)
size_similarity_all <- ggplot(group_size_test, aes(x=Size, y=Similarity,group=Tolerance
)) +
geom_boxplot()
size_similarity_all <- ggplot(group_size_test, aes(x=Size, y=Similarity,group=Tolerance
)) +
geom_boxplot()
print(size_similarity_all)
print(size_dimension)
size_dimension <- ggplot(group_size_test, aes(x=Size, y=Dimension,group=Tolerance
)) +
geom_boxplot()
print(tolerance_stabilisation)
print(tolerance_similarity)
print(tolerance_dimension)
print(size_dimension)
source("~/GitHub/ABM_polarisation/ABM data/ABM_graphing.R")
print(size_dimension)
size_dimension <- ggplot(group_size_test, aes(x=Size, y=Dimension,fill=Tolerance
)) +
geom_boxplot()
print(size_dimension)
source("~/GitHub/ABM_polarisation/ABM data/ABM_graphing.R")
print(size_similarity_all)
print(size_similarity_group1)
print(size_similarity_group2)
print(size_stabilisation)
print(size_similarity_group2)
print(size_similarity_group1)
print(size_similarity_all)
print(size_dimension)
print(tolerance_similarity)
print(tolerance_coherence)
print(tolerance_stabilisation)
tolerance_test %>% group_by(Tolerance) %>% summarize(m = mean(Similaity_ratio)) -> averaged_tolerances
library(dplyr)
tolerance_test %>% group_by(Tolerance) %>% summarize(m = mean(Similaity_ratio)) -> averaged_tolerances
averaged_tolerances
tolerance_similarity_baseline <- ggplot(tolerance_test,aes(x = Tolerance, y = m)) + geom_point()
print(tolerance_similarity_baseline)
tolerance_similarity_baseline <- ggplot(average_tolerance,aes(x = Tolerance, y = m)) + geom_point()
tolerance_similarity_baseline <- ggplot(average_tolerances,aes(x = Tolerance, y = m)) + geom_point()
tolerance_test %>% group_by(Tolerance) %>% summarize(m = mean(Similaity_ratio)) -> averaged_tolerances
tolerance_similarity_baseline <- ggplot(average_tolerances,aes(x = Tolerance, y = m)) + geom_point()
tolerance_test %>% group_by(Tolerance) %>% summarize(m = mean(Similaity_ratio)) -> average_tolerances
tolerance_similarity_baseline <- ggplot(average_tolerances,aes(x = Tolerance, y = m)) + geom_point()
print(tolerance_similarity_baseline)
tolerance_test %>% group_by(Tolerance) %>% summarize(m = mean(Similaity_ratio), c = mean(Coherence)) -> average_tolerances
average_tolerances
average_tolerances$diff <- average_tolerances$m - average_tolerances$Tolerance
average_tolerances$diff <- (average_tolerances$m - average_tolerances$Tolerance)
average_tolerances$diff <- (average_tolerances$m - as.numeric(average_tolerances$Tolerance))
average_tolerances$diff
average_tolerances$m
average_tolerances$Tolerance
as.numeric(average_tolerances$Tolerance)
tolerance_test %>% group_by(Tolerance_factor) %>% summarize(m = mean(Similaity_ratio), c = mean(Coherence)) -> average_tolerances
average_tolerances$diff <- (average_tolerances$m - average_tolerances$Tolerance)
source("~/GitHub/ABM_polarisation/ABM data/ABM_graphing.R")
